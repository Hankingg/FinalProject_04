<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:mvc="http://www.springframework.org/schema/mvc"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
   						https://www.springframework.org/schema/beans/spring-beans.xsd
   						 http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
      
   <!-- 
      * root-context.xml
      서버 구동과 동시에 web.xml을 거쳐서 바로 로딩되는 문서
      => 서버 구동과 동시에 바로 셋팅(빈을 등록)해야되는 내용들을 작성하면 됨
         주로 DB연결 설정, 트랜젝션 처리, 내외부 모듈 연동 등등
    -->
    
    <bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
       <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
       <property name="url" value="jdbc:oracle:thin:@192.168.20.28:1521:xe"/>
       <property name="username" value="medi"/>
       <property name="password" value="medi"/>
    </bean>
      
    <!-- 
      BasicDataSource dataSoruce = new BasicDataSource();
      dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
      dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
      dataSource.setUserName("spring");
      dataSource.setPassword("spring");
    -->
    
     <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
     </bean>
     
    <!-- 
       SqlSessionFactroyBean sqlSessionFactory = new SqlSessionFactroyBean();
       sqlSessionFactory.setConfigLocation("classpath:mybatis-config.xml");
       sqlSessionFactory.setDataSource(dataSoruce);
     -->
     
     <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
      <constructor-arg ref="sqlSessionFactory"/>
     </bean>
     
     <!-- 
           SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
      -->
      
      <!-- 
            property : setter 주입
            constructor-arg : 생성자주입
       -->
       
       <bean class="org.springframework.web.client.RestTemplate" id="restTemplate" />
       
       <!-- 파일 업로드 관련 빈 등록 -->
       <bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
             <property name="maxUploadSize" value="100000000"/>
             <property name="maxInMemorySize" value="100000000"/>
       </bean>
       
       <!-- json bean등록 -->
	       <!-- Jackson ObjectMapper 구성 -->
	    <bean id="jacksonObjectMapper" class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
	        <!-- ObjectMapper를 필요에 따라 사용자 정의 -->
	    </bean>
	
	    <!-- MappingJackson2HttpMessageConverter 구성 -->
	    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	        <property name="objectMapper" ref="jacksonObjectMapper"/>
	    </bean>
	
	    <!-- 컨버터를 컨버터 목록에 추가 -->
	    <mvc:annotation-driven>
	        <mvc:message-converters>
	            <ref bean="jsonConverter"/>
	        </mvc:message-converters>
	    </mvc:annotation-driven>
       
       
     
</beans>
